// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`tests for <Accordion /> should match SnapShot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AccordionMenu
    classname=""
    initalActive={Array []}
    multipleVisible={false}
    onSelect={null}
    showSeparator={true}
  >
    <AccordionGroup
      className=""
      disabled={false}
      focus={false}
      isExpanded={false}
      onClick={null}
      onKeyDown={null}
      showSeparator={true}
    >
      <AccordionHeader
        className=""
        disabled={false}
        focus={false}
        showSeparator={true}
      >
        <span>
          Hi
        </span>
      </AccordionHeader>
      <AccordionContent
        className=""
      >
        <span>
          Hello
        </span>
      </AccordionContent>
    </AccordionGroup>
  </AccordionMenu>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <AccordionGroup
          className=""
          disabled={false}
          focus={true}
          isExpanded={false}
          onClick={[Function]}
          onKeyDown={[Function]}
          showSeparator={true}
        >
          <AccordionHeader
            className=""
            disabled={false}
            focus={false}
            showSeparator={true}
          >
            <span>
              Hi
            </span>
          </AccordionHeader>
          <AccordionContent
            className=""
          >
            <span>
              Hello
            </span>
          </AccordionContent>
        </AccordionGroup>,
      ],
      "className": "cui-accordion",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <AccordionHeader
              className=""
              disabled={false}
              focus={false}
              showSeparator={true}
            >
              <span>
                Hi
              </span>
            </AccordionHeader>,
            <AccordionContent
              className=""
            >
              <span>
                Hello
              </span>
            </AccordionContent>,
          ],
          "className": "",
          "disabled": false,
          "focus": true,
          "isExpanded": false,
          "onClick": [Function],
          "onKeyDown": [Function],
          "showSeparator": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <span>
                Hi
              </span>,
              "className": "",
              "disabled": false,
              "focus": false,
              "showSeparator": true,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hi",
              },
              "ref": null,
              "rendered": "Hi",
              "type": "span",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <span>
                Hello
              </span>,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hello",
              },
              "ref": null,
              "rendered": "Hello",
              "type": "span",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <AccordionGroup
            className=""
            disabled={false}
            focus={true}
            isExpanded={false}
            onClick={[Function]}
            onKeyDown={[Function]}
            showSeparator={true}
          >
            <AccordionHeader
              className=""
              disabled={false}
              focus={false}
              showSeparator={true}
            >
              <span>
                Hi
              </span>
            </AccordionHeader>
            <AccordionContent
              className=""
            >
              <span>
                Hello
              </span>
            </AccordionContent>
          </AccordionGroup>,
        ],
        "className": "cui-accordion",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <AccordionHeader
                className=""
                disabled={false}
                focus={false}
                showSeparator={true}
              >
                <span>
                  Hi
                </span>
              </AccordionHeader>,
              <AccordionContent
                className=""
              >
                <span>
                  Hello
                </span>
              </AccordionContent>,
            ],
            "className": "",
            "disabled": false,
            "focus": true,
            "isExpanded": false,
            "onClick": [Function],
            "onKeyDown": [Function],
            "showSeparator": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <span>
                  Hi
                </span>,
                "className": "",
                "disabled": false,
                "focus": false,
                "showSeparator": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Hi",
                },
                "ref": null,
                "rendered": "Hi",
                "type": "span",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <span>
                  Hello
                </span>,
                "className": "",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Hello",
                },
                "ref": null,
                "rendered": "Hello",
                "type": "span",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
